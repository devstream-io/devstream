tools:
# name of the instance with github-repo-scaffolding-golang
- name: go-webapp-repo
  plugin:
    # kind of the plugin
    kind: github-repo-scaffolding-golang
    # version of the plugin
    # checkout the version from the GitHub releases
    version: 0.2.0
  # options for the plugin
  options:
    # the repo's owner. It should be case-sensitive here; strictly use your GitHub username; please change the value below.
    owner: YOUR_GITHUB_USERNAME
    # the repo which you'd like to create; please change the value below.
    repo: YOUR_REPO_NAME
    # the branch of the repo you'd like to hold the code
    branch: main
    # the image repo you'd like to push the container image; please change the value below.
    image_repo: YOUR_DOCKERHUB_USERNAME/YOUR_DOCKERHUB_IMAGE_REPO_NAME
- name: jira-github-default
  plugin:
    # kind of this plugin
    kind: jira-github-integ
    # version of the plugin
    # checkout the version from the GitHub releases
    version: 0.2.0
  # options for the plugin
  options:
    # the repo's owner
    owner: YOUR_GITHUB_USERNAME
    # the repo where you'd like to setup GitHub Actions
    repo: YOUR_REPO_NAME
    # "base url: https://id.atlassian.net"
    jiraBaseUrl: https://JIRA_ID.atlassian.net
    # "need real user email in cloud Jira"
    jiraUserEmail: JIRA_USER_EMAIL
    # "get it from project url, like 'HEAP' from https://merico.atlassian.net/jira/software/projects/HEAP/pages"
    jiraProjectKey: JIRA_PROJECT_KEY
    # main branch of the repo (to which branch the plugin will submit the workflows)
    branch: main
- name: golang-webapp-actions
  plugin:
    # name of the plugin
    kind: githubactions-golang
    # version of the plugin
    # checkout the version from the GitHub releases
    version: 0.2.0
  # options for the plugin
  options:
    # the repo's owner. It should be case-sensitive here; strictly use your GitHub user name; please change the value below.
    owner: YOUR_GITHUB_USERNAME
    # the repo where you'd like to setup GitHub Actions; please change the value below to an existing repo.
    repo: YOURE_REPO_NAME
    # programming language specific settings
    language:
      name: go
      # version of the language
      version: "1.17"
    # main branch of the repo (to which branch the plugin will submit the workflows)
    branch: main
    build:
      # default to false
      enable: True
      # build command, OPTIONAL, the given value below is default value
      command: "go build ./..."
    test:
      # default to false
      enable: True
      # test command, OPTIONAL, the given value below is default value
      command: "go test ./..."
      coverage:
        # default to false
        enable: True
        # go test profile subcommand, OPTIONAL, the given value below is default value
        profile: "-race -covermode=atomic"
        output: "coverage.out"
    docker:
      # docker build/push related, default to false
      enable: False
      # dockerhub image repo; please change the value below.
      repo: YOUR_DOCKERHUB_IMAGE_REPO_NAME
- name: argocd
  plugin:
    # name of the plugin
    kind: argocd
    # version of the plugin
    # checkout the version from the GitHub releases
    version: 0.2.0
  options:
    # need to create the namespace or not, default: false
    create_namespace: true
    repo:
      # name of the Helm repo
      name: argo
      # url of the Helm repo
      url: https://argoproj.github.io/argo-helm
    # Helm chart information
    chart:
      # name of the chart
      chart_name: argo/argo-cd
      # release name of the chart
      release_name: argocd
      # k8s namespace where ArgoCD will be installed
      namespace: argocd
      # whether to wait for the release to be deployed or not
      wait: true
      # the time to wait for any individual Kubernetes operation (like Jobs for hooks). This defaults to 5m0s
      timeout: 5m
      # whether to perform a CRD upgrade during installation
      upgradeCRDs: true
- name: helloworld
  plugin:
    # name of the plugin
    kind: argocdapp
    # version of the plugin
    # checkout the version from the GitHub releases
    version: 0.2.0
  # options for the plugin
  options:
    # information on the ArgoCD application
    app:
      # name of the ArgoCD application
      name: hello
      # where the ArgoCD application CRD will be created
      namespace: argocd
    # destination of the application
    destination:
      # on which server to deploy
      server: https://kubernetes.default.svc
      # in which namespace to deploy
      namespace: default
    # source of the application
    source:
      # which values file to use in the Helm chart
      valuefile: values.yaml
      # path of the Helm chart
      path: charts/go-hello-http
      # Helm chart repo URL, this is only an example, do not use this
      repoURL: https://github.com/ironcore864/openstream-gitops-test.git
