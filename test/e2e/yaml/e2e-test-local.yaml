---
varFile: ""
toolFile: ""
state:
  backend: local
  options:
    stateFile: devstream.state
---
defaultBranch: main
githubUsername: GITHUBUSERNAME
repoName: dtm-e2e-test-golang
dockerRegistryUserName: DOCKERUSERNAME
argocdNameSpace: argocd-e2e-test
argocdDeployTimeout: 10m
---
tools:
- name: repo-scaffolding
  instanceID: golang-github
  options:
    destination_repo:
      owner: [[ githubUsername ]]
      org: ""
      repo: [[ repoName ]]
      branch: [[ defaultBranch ]]
      repo_type: github
    vars:
      ImageRepo: "[[ dockerhubUsername ]]/[[ repoName ]]"
    source_repo:
      org: devstream-io
      repo: dtm-scaffolding-golang
      repo_type: github
- name: githubactions-golang
  instanceID: default
  dependsOn: ["repo-scaffolding.golang-github"]
  options:
    owner: ${{repo-scaffolding.golang-github.outputs.owner}}
    repo: ${{repo-scaffolding.golang-github.outputs.repo}}
    language:
      name: go
      version: "1.17"
    branch: [[ defaultBranch ]]
    build:
      enable: True
    test:
      enable: True
      coverage:
        enable: True
    docker:
      enable: True
      registry:
        type: dockerhub
        username: [[ dockerRegistryUserName ]]
- name: argocd
  instanceID: default
  options:
    create_namespace: true
    repo:
      name: argo
      url: https://argoproj.github.io/argo-helm
    chart:
      chart_name: argo/argo-cd
      release_name: argocd
      namespace: [[ argocdNameSpace ]]
      wait: true
      timeout: [[ argocdDeployTimeout ]]
      upgradeCRDs: true
- name: argocdapp
  instanceID: default
  dependsOn: ["argocd.default", "repo-scaffolding.golang-github"]
  options:
    app:
      name: ${{repo-scaffolding.golang-github.outputs.repo}}
      namespace: [[ argocdNameSpace ]]
    destination:
      server: https://kubernetes.default.svc
      namespace: default
    source:
      valuefile: values.yaml
      path: helm/${{repo-scaffolding.golang-github.outputs.repo}}
      repoURL: ${{repo-scaffolding.golang-github.outputs.repoURL}}
