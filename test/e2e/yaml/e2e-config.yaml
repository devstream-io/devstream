config:
  state:
    backend: local
    options:
      stateFile: devstream.state

vars:
  defaultBranch: main
  githubOrganization: devstream-io
  repoName: dtm-e2e-go
  dockerRegistryUserName: dtme2etest

tools:
- name: repo-scaffolding
  instanceID: golang-github
  options:
    destinationRepo:
      org: [[ githubOrganization ]]
      repo: [[ repoName ]]
      branch: [[ defaultBranch ]]
      repoType: github
    vars:
      ImageRepo: "[[ dockerRegistryUserName ]]/[[ repoName ]]"
    sourceRepo:
      org: devstream-io
      repo: dtm-scaffolding-golang
      repoType: github
- name: githubactions-golang
  instanceID: default
  dependsOn: ["repo-scaffolding.golang-github"]
  options:
    org: ${{repo-scaffolding.golang-github.outputs.org}}
    repo: ${{repo-scaffolding.golang-github.outputs.repo}}
    language:
      name: go
      version: "1.18"
    branch: [[ defaultBranch ]]
    build:
      enable: True
    test:
      enable: True
      coverage:
        enable: True
    docker:
      enable: True
      registry:
        type: dockerhub
        username: dtme2etest
- name: helm-installer
  instanceID: argocd-001
  options:
    chart:
      upgradeCRDs: false
    valuesYaml: |
      crds:
        keep: false
- name: argocdapp
  instanceID: default
  dependsOn: ["helm-installer.argocd-001", "repo-scaffolding.golang-github"]
  options:
    app:
      name: ${{repo-scaffolding.golang-github.outputs.repo}}
      namespace: argocd
    destination:
      server: https://kubernetes.default.svc
      namespace: default
    source:
      valuefile: values.yaml
      path: helm/${{repo-scaffolding.golang-github.outputs.repo}}
      repoURL: ${{repo-scaffolding.golang-github.outputs.repoURL}}
