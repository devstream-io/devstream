package jira

import (
	"github.com/mitchellh/mapstructure"

	"github.com/devstream-io/devstream/internal/pkg/configmanager"
	"github.com/devstream-io/devstream/internal/pkg/plugin/installer/ci/cifile"
	"github.com/devstream-io/devstream/pkg/util/scm/git"
)

// options is the struct for configurations of the jira-integ plugin.
type options struct {
	Scm          *git.RepoInfo `mapstrucvure:"scm" validate:"required"`
	IntegOptions *integOptions `mapstructure:"integOptions" validate:"required"`

	// generated by Scm and IntegOptions field, only used in module
	CIFileConfig *cifile.CIFileConfig `mapstructure:"ci"`
}

type integOptions struct {
	BaseURL    string `mapstructure:"baseUrl" validate:"required"`
	UserEmail  string `mapstructure:"userEmail" validate:"required"`
	ProjectKey string `mapstructure:"projectKey" validate:"required"`
}

// newOptions create options by raw options
func newOptions(rawOptions configmanager.RawOptions) (*options, error) {
	var opts *options
	if err := mapstructure.Decode(rawOptions, &opts); err != nil {
		return opts, err
	}
	return opts, nil
}
