name: e2e test

on:
  push:
    branches: [ main ]
    paths:
      - '**.go'
      - 'Makefile'
      - 'go.mod'
      - 'go.sum'
      - '.github/workflows/*.yml'
      - 'test/**'
      - 'hack/e2e/**'
      - 'hack/terraform/**'

env:
  # DO NOT use the GITHUB_TOKEN here
  # see https://github.com/devstream-io/devstream/pull/414 for more info
  GITHUB_TOKEN: ${{ secrets.E2E_GITHUB_TOKEN }}
  DOCKERHUB_USERNAME: ${{ secrets.E2E_DOCKERHUB_USERNAME }}
  # for github actions
  DOCKERHUB_TOKEN: ${{ secrets.E2E_DOCKERHUB_TOKEN }}
  # for apps
  IMAGE_REPO_PASSWORD: ${{ secrets.E2E_DOCKERHUB_TOKEN }}

concurrency:
  group: ${{ github.workflow }}

jobs:
  e2e-test:
    # permissions for id and other
    permissions:
      id-token: write
      contents: write
    if: github.repository == 'devstream-io/devstream'
    strategy:
      matrix:
        os: [ubuntu-latest]
        go: [1.18.x]
    runs-on: [self-hosted, linux, X64]
    name: e2e-test-${{ matrix.os }}
    steps:
      - run: echo "üêß This job is now running on a ${{ runner.os }}-${{ runner.arch }} server hosted by GitHub!"
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Golang env
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
          cache: true
      - name: Build
        run: make build -j8
      - name: Install AWS CLI v2
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o /tmp/awscliv2.zip
          unzip -q /tmp/awscliv2.zip -d /tmp
          rm /tmp/awscliv2.zip
          sudo /tmp/aws/install --update
          rm -rf /tmp/aws/
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      - name: Configure EKS credentials
        run: |
          aws eks update-kubeconfig --region ap-southeast-1 --name dtm-test
      - name: Install kubectl
        run: |
          curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.22.0/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl
      - name: copy config files
        run: cp ./test/e2e/yaml/e2e-*.yaml ./
      - name: test 1 - apply git-ops (tools only)
        run: ./dtm apply -f e2e-tools.yaml -y
      - name: test 1 - apply git-ops (tools only) again
        run: ./dtm apply -f e2e-tools.yaml -y
      - name: test 1 - check if pod is ready
        run: while [[ $(kubectl get pods -l app=dtm-e2e-python -o 'jsonpath={..status.conditions[?(@.type=="Ready")].status}') != "True" ]]; do echo "pod not ready yet..."; sleep 3; done
        timeout-minutes: 10
      - name: test 1 - verify
        run: ./dtm verify -f e2e-tools.yaml
      - name: test 1 - clean
        run: ./dtm delete -f e2e-tools.yaml -y
      - name: test 2 - apply (apps)
        run: ./dtm apply -f e2e-apps.yaml -y
      - name: test 2 - apply (apps) again
        run: ./dtm apply -f e2e-apps.yaml -y
      - name: test 2 - check if pod is ready
        run: while [[ $(kubectl get pods -l app=dtm-e2e-go -o 'jsonpath={..status.conditions[?(@.type=="Ready")].status}') != "True" ]]; do echo "pod not ready yet..."; sleep 3; done
        timeout-minutes: 10
      - name: test 2 - clean
        run: ./dtm delete -f e2e-apps.yaml -y
      - name: test e2e success or not
        if: failure()
        run: |
            echo "e2e actions failure"
            echo ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            curl -X POST -H "Content-Type: application/json" -d '{"msg_type":"text","content":{"text":"<at user_id=\"all\">All</at>Attention: dtm-actions failure: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} "}}' https://open.feishu.cn/open-apis/bot/v2/hook/${{ secrets.FEISHU_BOT_ID }}
